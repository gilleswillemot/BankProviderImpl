/**
 * If executing a task in the gradle build (see commit: 472ee4f7baa9e67610494502000b39a9a1497e9f)
 * #:> gradlew :bankprovidermodule:build task createFramework -PtestParameter="testValue"
 *
 * To execute this build.gradle file with a parameter (e.g. to build a ios framework) =>
 * #:> gradlew :bankprovidermodule:build -Pios="iosSimulatorTarget"
 * (iosSimulatorTarget could be ios_x64, ios_arm64, ...)
 *
 * To execute kotlin2js => #:> gradlew :bankprovidermodule:build -Pjs
 *
 * To execute normal (android library build) => #:> gradlew :bankprovidermodule:build
 */

// Check if build script was run with parameter ios, in order to create an ios framework
if (project.hasProperty("ios")) {
    /**
     * Executing 'build-ios-framework' gradle script.
     *
     * The 'from' parameter can be a URL, so you can make your shared scripts available via HTTP somewhere
     * eg your subversion repository), and import them from multiple builds.
     * Source: https://docs.gradle.org/current/userguide/userguide_single.html#sec:configuring_using_external_script
     */
    apply from: "build-ios-framework.gradle"

    //LOGGING: output can be seen in View -> Tool windows -> Build (log icon beneath hammer icon)
    project.logger.lifecycle(project.ios)

}
// check if following command was executed in terminal: gradlew :bankprovidermodule:build -Pjs
else if (project.hasProperty("js")) {
    apply from: "build-js.gradle"
//    apply from: "build-js-multiplatform.gradle"
} else {
    apply from: "android-build.gradle"
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.github.gilleswillemot:bankApp-core:1.0.3'

//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
